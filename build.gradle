import com.github.spotbugs.SpotBugsTask

plugins {

    id "application"

    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)

    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"
}

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 13

repositories {
    mavenCentral()
    jcenter()
}

test {
    useJUnitPlatform()
    jacoco
    finalizedBy  jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/JaCoCo")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("$buildDir/JaCoCo")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/gui/**')
        }))
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    implementation 'org.postgresql:postgresql:42.2.8.jre7'
    testCompile "org.mockito:mockito-core:2.+"

    compile group: 'com.badlogicgames.gdx', name: 'gdx', version: '1.9.10'
    compile group: 'com.badlogicgames.gdx', name: 'gdx-box2d', version: '1.9.10'
    compile "com.badlogicgames.gdx:gdx-backend-lwjgl:1.9.10"
    compile "com.badlogicgames.gdx:gdx-platform:1.9.10:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-box2d-platform:1.9.10:natives-desktop"
    compile "com.badlogicgames.gdx:gdx:1.9.10"
    compile "com.badlogicgames.gdx:gdx-box2d:1.9.10"
    compile "com.badlogicgames.gdx:gdx-freetype:1.9.10"
    compile group: 'org.springframework.security', name: 'spring-security-crypto',
            version: '3.1.0.RELEASE'\
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.cse.sem.*']
            limit {
                minimum = 0.5
            }
        }
    }
}

checkstyle {
    toolVersion "8.25"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

pmd {
    incrementalAnalysis = true
}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
    toolVersion = '4.0.0-beta4'
}

tasks.withType(SpotBugsTask) {
      reports.xml.enabled = false
      reports.html.enabled = true
  }

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

apply plugin : "java"
ext {
    javaMainClass = "DesktopLauncher"
}

application {
    mainClassName = javaMainClass
}