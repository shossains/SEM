import com.github.spotbugs.SpotBugsTask

plugins {

    id "application"

    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)

    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"
}

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 13

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
        includes = ['nl.tudelft.cse.sem.*']
        excludes = []
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.cse.sem.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

checkstyle {
    toolVersion "8.25"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

pmd {
    incrementalAnalysis = true
}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
    toolVersion = '4.0.0-beta4'
}

tasks.withType(SpotBugsTask) {
      reports.xml.enabled = false
      reports.html.enabled = true
  }

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

apply plugin : "java"
ext {
    javaMainClass = "HelloWorld"
}

application {
    mainClassName = javaMainClass
}